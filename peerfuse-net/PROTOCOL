Packets
-------

	Packets are built like this:

	.------------.------------.------------.------------.
	|   srcID    |   dstID    |    type    |    size    |
	|  (uint32)  |  (uint32)  |  (uint32)  |  (uint32)  |
	|------------+------------+------------+------------|
	|                                                   |
	|                        BODY                       |
	|                       (size)                      |
	|                                                   |
	'---------------------------------------------------'

Messages
--------

	HELLO
	~~~~~

		.------------.------------.------------.------------.
		|   srcID    |   dstID    |    type    |    size    |
		|------------+------------+------------'------------|
		|    Now     |   flags    |  port      | version .. |
		|  (uint32)  |  (uint32)  |  (uint32)  |  (char[])  |
		'------------'------------'-------------------------'

		Now: local time
		flags: Flags are:
			0x01: highlink
		port: port which I listen
		version: peerfuse version string

	PEER_CONNECTION
	~~~~~~~~~~~~~~~

		.------------.------------.------------.------------.
		|   srcID    |   dstID    |    type    |    size    |
		|------------+------------'------------'------------|
		|                 id + address + port               |
		|                     (pf_addr)                     |
		|---------------------------------------------------|
		|                     certificate                   |
		|                      (char[])                     |
		'---------------------------------------------------'

	PEER_BYE
	~~~~~~~~

		.------------.------------.------------.------------.
		|   srcID    |   dstID    |    type    |    size    |
		'------------'------------'------------'------------'

	END_OF_MERGE
	~~~~~~~~~~~

		.------------.------------.------------.------------.
		|   srcID    |   dstID    |    type    |    size    |
		'------------'------------'------------'------------'

	END_OF_MERGE_ACK
	~~~~~~~~~~~~~~~

		.------------.------------.------------.------------.
		|   srcID    |   dstID    |    type    |    size    |
		'------------'------------'------------'------------'

	MKFILE
	~~~~~~

		.------------.------------.------------.------------.
		|   srcID    |   dstID    |    type    |    size    |
		|------------+------------'------------'------------|
		| path size  |    path ...             |   modes    |
		|  (uint32)  |                (char[]) |  (uint32)  |
		|------------+------------.------------+------------|
		|     UID    |     GID    |       file   size       |
		|  (uint32)  |  (uint32)  |         (uint64)        |
		|------------+------------+------------+------------|
		|   access   |  creation  |    modif   | meta modif |
		|  (uint32)  |  (uint32)  |  (uint32)  |  (uint32)  |
		'------------'------------'------------'------------'

	RMFILE
	~~~~~~

		.------------.------------.------------.------------.
		|   srcID    |   dstID    |    type    |    size    |
		|------------+------------'------------'------------|
		| path size  |  path ...                            |
		|  (uint32)  |                (char[])              |
		'------------'--------------------------------------'

Connection
----------

	A---.           .---E
	    |--C ==> D--|
	B---'           '---F

	C -> D - HELLO <local time> <flags> <listening port> <version>

		Send informations about me...

		Here "flags" has the "HIGHLINK" flag set to 1.

		* D sets flag MERGING

	D -> (E,F) - PEER_CONNECTION {C}

		D tells to his links the C connection.

	D -> C - HELLO <local time> <flags> <listening port> <version>

		D sends his own hello message, with own caracteristics.

		* C sets flag MERGING

	C -> D - PEER_CONNECTION <pf_addr> <certificate>

		For each peer (A and B), C will send a PEER_CONNECTION message.

		Note that the sender (srcid) in header of packet, is the uplink
		of this peer.

		pf_addr is the hostname, port and ID of peer.

	D -> (E,F) - PEER_CONNECTION <pf_addr> <certificate>

		D broadcast peer_connection

	C -> D - END_OF_MERGE

		End of his merge, ask D to send his own links.

		* D clears MERGING flag
		* D sets MERGING_ACK flag

	D -> C - PEER_CONNECTION <pf_addr> <certificate>

		Likewise for D connections.

	C -> (A,B) - PEER_CONNECTION <pf_addr> <certificate>

		Broadcast

	D -> C - END_OF_MERGE

		End of his merge.

		* C clears flag MERGING
		* C sets flag MERGING_ACK

	C -> D - END_OF_MERGE_ACK

		Acknowledge

		* D clears flag MERGING_ACK

	D -> C - END_OF_MERGE_ACK

		Likewise

		* C clears flag MERGING_ACK

